import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document, Types } from 'mongoose';
import { EmergencyContact, PersonalDocuments } from 'src/common/utils/helper';
export type PatientDocument = Patient & Document;

@Schema({ timestamps: true })
export class Patient {
  _id: Types.ObjectId;

  // 1 -Patient Personal Information:

  @Prop({ required: true })
  name: string;

  @Prop({ required: true, unique: true })
  cardNumber: string;

  @Prop({
    required: true,
    unique: false,
    isNaN: false,
  })
  internalIdentity: string;

  @Prop({ type: Date, required: false })
  dateOfBirth: Date;

  @Prop({ required: false, enum: ['male', 'female'] })
  gender: string;

  @Prop({ type: String, required: false })
  nationality: string;

  @Prop({
    type: String,
    enum: ['Single', 'Married', 'Divorced', 'Widowed'],
    default: 'Single',
  })
  marital_status?: string;

  @Prop({
    type: String,
    default: 'Arabic',
    required: false,
  })
  preferredLanguage: string;

  @Prop({
    type: String,
    required: false,
    enum: ['Muslim', 'Christian', 'Druze', 'Other'],
  })
  religion: string;

  @Prop({ type: String, required: false })
  logo: string;

  @Prop({ type: Object, required: false })
  personalDocuments: PersonalDocuments[];

  // 2- Contact Information:

  @Prop({ type: String, required: true })
  phoneNumber: string;

  @Prop({ type: String, required: false, unique: true })
  email: string;

  @Prop({ type: String, required: false })
  buildingNumber: string;

  @Prop({ type: String, required: false })
  streetName: string;

  @Prop({ type: String, required: false })
  region: string;

  @Prop({ type: String, required: false })
  country: string;

  @Prop({ type: String, required: false })
  nation: string;

  // 3- Insurance Information: [Autogenerated Inputs]:

  @Prop({ type: String, required: false })
  memberNumber: string;

  @Prop({ type: String, required: false })
  memberType: string;

  @Prop({ type: String, required: false })
  insuranceCompany: string;

  @Prop({ type: String, required: false })
  providerNetwork: string;

  @Prop({ type: String, required: false })
  policyID: string;

  @Prop({ type: String, required: false })
  class: string;

  @Prop({ type: String, required: false })
  coPayment: string;

  @Prop({ type: String, required: false })
  coverageLimit: string;

  @Prop({ type: String, required: false })
  coverageStartDate: string;

  @Prop({ type: String, required: false })
  coverageEndDate: string;

  @Prop({ type: String, required: false })
  insuranceStatus: string;

  //4-Emergency Contact

  @Prop({ type: Object, required: false })
  emergencyContact: EmergencyContact;

  //extra

  @Prop({ default: true })
  isActive: boolean;

  @Prop({ type: Boolean, default: false })
  deleted: boolean;

  @Prop({ unique: true, required: true })
  publicId: string;
}

export const PatientSchema = SchemaFactory.createForClass(Patient);
